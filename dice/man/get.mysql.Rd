% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_fxns.R
\name{get.mysql}
\alias{get.mysql}
\title{Retrieve incidence and climate data from MySQL database.}
\usage{
get.mysql(mod_level = 2, fit_level = 3, mod_name = c(NAME_2 = "BR"),
  fit_names = "all", start.date = as.Date("2010-01-01"),
  end.date = as.Date("2010-12-31"), disease = "dengue",
  sql_data_source = NULL, season = NULL, all_years_flag = T,
  db_opts = list(DICE_db = "predsci", CDC_server = F), cad_clim = TRUE,
  raw_col = NULL)
}
\arguments{
\item{mod_level}{An integer describing the spatial level of the model data.(Default value is 2)  Levels: 0-Global, 1-Continent, 2-Country, 3-Region, 4-State, 5-County, 6-City.  \pkg{dice} currently has mydata at levels 2-3 for CDC and 2-4 for GFT.}

\item{fit_level}{An integer describing the spatial level of the fits used to construct the model-level profile/forecast (Default value is 3, must be >= mod_level).}

\item{mod_name}{A named-vector of character strings that specify which region is to be \strong{model}ed.  In other words, \code{mod_name} specifies the country, region, state, etc. of the mod_level region.  \code{mod_name} should be of the form \code{mod_name = c(NAME_2='a', NAME_3='b',..., NAME_i='x'} where i=mod_level and 'a', 'b',...,'x' are the appropriate level names. NAME_i='x' also accepts abbreviations.  Choose appropriate names from \code{\link{diceData}}.  For example, mod_name=c(NAME_2='United.States',NAME_3='Region4',NAME_4='North.Carolina') and mod_level=4 specifies North Carolina. To achieve the same result, use all abbreviations mod_name=c(NAME_2='US',NAME_3='R4',NAME_4='NC') or a mix of names and abbreviations mod_name=c(NAME_2='US',NAME_3='Region4',NAME_4='NC'). Unlike get.cdc.data(), get.mysql() expects ISO2 country abbreviations.}

\item{start.date}{A Date-class variable - start date of fitting period.  Passing a NULL value causes the earliest available mydata to be returned.}

\item{end.date}{A Date-class variable - end date of forecasting period.  Passing a NULL value causes the latest available mydata to be returned.}

\item{disease}{String - disease name. Options for modeling are: flu, dengue, yellow$\_$fever, ebola, zika, cholera, chik, plague. To graphically explore the data see: \url{predsci.com/id$\_$data/}. A full list of diseases in the DICE database can be found from an R-prompt by following one of the examples below.}

\item{sql_data_source}{Describes the data source for the incidence data. Default is 'cdc' (for \code{disease = 'flu'}). It can be selected by source_key (integer) or source abbreviation (string). Most disease/location combinations have only one data source.  In this case, it may be easier to set data_source=NULL.  However, when multiple data sources exist, setting data_source=NULL will essentially choose from the available sources at random.  To determine a data source by graphical interface, see: \url{predsci.com/id_data/}.  Looking-up the disease and location will result in a list of data sources that can be entered into DICE.  Alternatively, all country/disease/data_source combinations are listed in the `Data Sources Table' tab at the same url.  To access the list of sources directly from an R-prompt, see the examples below.}

\item{season}{An integer (year) specifying the season.  When only one year is needed and/or start/end dates are not certain, season can be set.  If !is.null(season), it overrides the start./end.date inputs.}

\item{all_years_flag}{Logic flag indicating if all years of incidence should be returned in addition to the specified season/date-range.}

\item{raw_col}{A string specifying which data column to use for modeling.  Data column names are associated with data sources and are listed in the data_sources table under 'col_name'.  When raw_col is NULL, DICE uses the default (first) data column.}

\item{fit_name}{A character vector indicating which fit-regions to use.  If \code{fit_name='all'}, then DICE uses all child-regions of the model region with level equal to \code{fit_level}. The other mode for fit_name is to specifiy a subset of the fit regions to construct an aggregate representation of the model region.  For example if \code{mod_level=c(NAME_2="US")}, \code{mod_level=2}, \code{fit_level=3}, and \code{fit_names=c("R1", "R2", "R3")}, DICE will create an Atlantic super-region to model (as opposed to using all 10 HHS regions).  Similarly, if \code{mod_level=c(NAME_2="US")}, \code{mod_level=2}, \code{fit_level=4}, and \code{fit_names=c("WA", "OR", "CA")}, DICE will create and model a super-state of Pacific states.}
}
\value{
mydata  A list ILI, SH, School, and Census mydata for both the model- and fit-level region(s).
}
\description{
This function is generally called by \code{\link{get.DICE.data}}. After retrieving the data is is formatted for use by \pkg{DICE}
}
\examples{
require(DICE)
mydata = get.mysql(mod_level = 2, fit_level = 4, mod_name = c(NAME_2='BR'), start.date=as.Date("2010-01-01"), end.date=as.Date("2010-12-31"), disease="dengue", sql_data_source=1)

-- Data diseases and data_sources -------
Access the database and list all available diseases:
library(DICE)
myDB = OpenCon()
data_sources = dbReadTable(con=myDB, name="data_sources")
unique(data_sources$disease)
# then list all data sources
str(data_sources)
data_sources$source_abbv
dbDisconnect(myDB)
}
